CREATE DATABASE Megashop;
USE Megashop;


CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('buyer', 'seller', 'admin') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE User_Images (
    image_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    image_url VARCHAR(255) NOT NULL, -- رابط الصورة
    is_profile_picture BOOLEAN DEFAULT FALSE, -- هل هذه الصورة هي صورة الملف الشخصي؟
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);


CREATE TABLE Categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    parent_category_id INT,
    FOREIGN KEY (parent_category_id) REFERENCES Categories(category_id)
);

CREATE TABLE Products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    seller_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL,
    category_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (seller_id) REFERENCES Users(user_id),
    FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);

CREATE TABLE Product_Images (
    image_id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    image_url VARCHAR(255) NOT NULL, -- رابط الصورة
    is_primary BOOLEAN DEFAULT FALSE, -- هل هذه الصورة هي الصورة الرئيسية؟
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);

CREATE TABLE Orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    status ENUM('pending', 'completed', 'cancelled') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);


CREATE TABLE Order_Items (
    order_item_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);


CREATE TABLE Payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    status ENUM('success', 'failed', 'pending') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES Orders(order_id)
);


CREATE TABLE Reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    user_id INT NOT NULL,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES Products(product_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Chat (
    chat_id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL,
    receiver_id INT NOT NULL,
    message TEXT NOT NULL,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES Users(user_id),
    FOREIGN KEY (receiver_id) REFERENCES Users(user_id)
);


INSERT INTO Users (username, email, password_hash, role)
VALUES 
('ahmed', 'ahmed@example.com', 'hashed_password_1', 'buyer'),
('ali', 'ali@example.com', 'hashed_password_2', 'seller'),
('admin', 'admin@example.com', 'hashed_password_3', 'admin');



INSERT INTO User_Images (user_id, image_url, is_profile_picture)
VALUES 
(1, 'https://example.com/images/user_1_profile.jpg', TRUE),
(2, 'https://example.com/images/user_2_profile.jpg', TRUE);

INSERT INTO Categories (name, parent_category_id)
VALUES 
('Electronics', NULL),
('Clothing', NULL),
('Mobile Phones', 1),
('Laptops', 1),
('Men\'s Clothing', 2),
('Women\'s Clothing', 2);


INSERT INTO Products (seller_id, name, description, price, stock_quantity, category_id)
VALUES 
(2, 'iPhone 13', 'Latest iPhone model', 999.99, 50, 3),
(2, 'MacBook Pro', 'Apple laptop with M1 chip', 1999.99, 30, 4),
(2, 'Men\'s T-Shirt', 'Cotton T-Shirt for men', 19.99, 100, 5);


INSERT INTO Product_Images (product_id, image_url, is_primary)
VALUES 
(1, 'https://example.com/images/iphone_13_main.jpg', TRUE),
(1, 'https://example.com/images/iphone_13_extra1.jpg', FALSE),
(2, 'https://example.com/images/macbook_pro_main.jpg', TRUE),
(3, 'https://example.com/images/mens_tshirt_main.jpg', TRUE);


INSERT INTO Orders (user_id, total_amount, status)
VALUES 
(1, 1019.98, 'pending'),
(1, 19.99, 'completed');


INSERT INTO Order_Items (order_id, product_id, quantity, price)
VALUES 
(1, 1, 1, 999.99),
(1, 3, 1, 19.99),
(2, 3, 1, 19.99);


INSERT INTO Payments (order_id, payment_method, amount, status)
VALUES 
(1, 'PayPal', 1019.98, 'success'),
(2, 'Visa', 19.99, 'success');



INSERT INTO Reviews (product_id, user_id, rating, comment)
VALUES 
(1, 1, 5, 'Great phone!'),
(3, 1, 4, 'Comfortable T-Shirt.');


INSERT INTO Chat (sender_id, receiver_id, message)
VALUES 
(1, 2, 'Hello, is the iPhone available?'),
(2, 1, 'Yes, it is available.');

SELECT 
    Products.product_id,
    Products.name,
    Products.description,
    Products.price,
    Product_Images.image_url,
    Product_Images.is_primary
FROM 
    Products
LEFT JOIN 
    Product_Images ON Products.product_id = Product_Images.product_id;
    
    
SELECT 
    Users.username,
    User_Images.image_url
FROM 
    Users
LEFT JOIN 
    User_Images ON Users.user_id = User_Images.user_id
WHERE 
    User_Images.is_profile_picture = TRUE;